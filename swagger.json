{
    "swagger": "2.0",
    "info": {
        "title": "BAREFOOT NOMAD API",
        "description": "This is team project,Elites team",
        "version": "1.0.0",
        "contact": {
            "name": "Developers",
            "email": "niyonzimadeus2002@gmail.com"
        }
    },

    "schemes": ["HTTP", "HTTPS"],

    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },

    "servers": [{
        "url": "http://localhost:3000",
        "name": "DEV"
    }],

    "paths": {
        "/api/v1": {
            "get": {
                "tag": ["Home"],
                "description": "welcome page",
                "operationId": "getHome",
                "responses": {
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/api/v1/users/register": {
            "post": {
                "tags": ["Users"],
                "summary": "This will register a user",
                "description": " ",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "Body",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Register"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "409": {
                        "description": "User with given email already exists"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/trip/request/": {
            "post": {
                "tags": ["Trip Request"],
                "summary": "This is the endpoint to request a trip by user",
                "description": "This is the endpoint to request trip by user",
                "operationId": "Addt tripRequest",
                "parameters": [ {
                    "name": "body",
                    "in": "body",
                    "description": "Trip request",
                    "schema": {
                        "$ref": "#/definitions/trip"
                    }

                }],
                "responses": {
                    "201": {
                        "description": "Trip request created successfull"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [{
                    "Bearer": []
                }]
            }
        },

        "/api/v1/trip/allrequests/": {
            "get": {
                "tags": ["Trip Request"],
                "summary": "This endPoint will retrieve the requests sent by requester pending,rejected or approved",
                "description": "This endPoint will retrieve the requests sent by requester,either pending,rejected or approved",
                "operationId": "getAllRequest",

                "responses": {
                    "200": {
                        "description": "Successfully retrieved"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [{
                    "Bearer": []
                }]
            }
        },

        "/api/v1/trip/requests/": {
            "get": {
                "tags": ["Trip Request"],
                "summary": "This endPoint will retrieve the pending requests sent by requester",
                "description": "This endPoint will retrieve the pending requests sent by requester",
                "operationId": "getRequest",

                "responses": {
                    "200": {
                        "description": "Successfully retrieved"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [{
                    "Bearer": []
                }]
            }
        },


        "/api/v1/trip/requests/all": {
            "get": {
                "tags": ["Trip Request"],
                "summary": "This endPoint will retrieve the requests sent to manager",
                "description": "This endPoint will retrieve the requests sent by requesters to manager",
                "operationId": "get requests sent to manager",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [{
                    "Bearer": []
                }]
            }
        },

        "/api/v1/trip/requests/{id}": {
            "delete": {
                "tags": ["Trip Request"],
                "summary": "This end Point will delete the pending request sent by requester",
                "description": "This end Point will delete the pending request sent by requester",
                "operationId": "delete Request",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Trip request id",
                        "required": true,
                        "type": "integer"
                    }
                ],

                "responses": {
                    "204": {
                        "description": "SUCCESSFULLY DELETED"
                    },
                    "404": {
                        "description": "NOT FOUND"
                    }
                },
                "security": [{
                    "Bearer": []
                }]
            },
            "patch": {
                "tags": ["Trip Request"],
                "summary": "update request with pending status",
                "description": " update request with pending status",
                "operationId": "updateRequest",
                "produces": ["application/json"],
                "parameters": [ {
                        "name": "id",
                        "in": "path",
                        "type": "integer"

                    }, {
                        "name": "body",
                        "in": "body",
                        "description": "Trip request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trip"
                        }

                    }

                ],
                "responses": {
                    "200": {
                        "description": "successfully updated user with given id"
                    },
                    "409": {
                        "description": "please fill in all fields"
                    },
                    "404": {
                        "description": "user you want to update does not exist"
                    }
                },
                "security": [{
                    "Bearer": []
                }]
            }
        }
    },

    "definitions": {
        "Register": {
            "type": "object",
            "in": "body",
            "required": ["names", "email", "password"],
            "properties": {
                "names": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Login": {
            "type": "object",
            "in":"body",
            "required": ["email", "password"],
            "properties": {
                  "email": {
                      "type": "string"
                  },
                  "password": {
                      "type": "string"
                  }
              }
          },
        "trip": {
            "type": "object",
            "in": "body",
            "properties": {
                "departLocation": {
                    "type": "integer"
                },
                "arrivalLocation": {
                    "type": "integer"
                },
                "tripReason": {
                    "type": "string"
                },
                "departDate": {
                    "type": "string"
                },
                "returnDate": {
                    "type": "string"
                },
                "accomodationId": {
                    "type": "integer"
                }
                
            }
        }
    }
}
